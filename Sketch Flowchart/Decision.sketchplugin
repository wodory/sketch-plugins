// Sketch Plugin: AEFlowchart - Decision (ctrl shift d)
// Source: github.com/tadija/AEFlowchart
// Version: 1.0

#import 'AEFlowchart.js'

/*  call AEFlowchart main function with custom name and shape function  */
createStep("Decision", decisionShape);

function addXYText(newGroup, label, shape) {
  var labelFrame = [label frame],
      shapeFrame = shape.frame();

  // create Y & N
  var textYes = newGroup.addLayerOfType("text"),
      textNo = newGroup.addLayerOfType("text"),
      textYesFrame = [textYes frame];
      textNoFrame = [textNo frame];

  textYes.setName("Y");
  textYes.setStringValue ("Y");
  textYes.fontSize = labelFontSizeForDecision;
  textYes.setFontPostscriptName(labelFontNameForDecision);
  textYes.textColor = MSColor.colorWithSVGString(labelFontColorBright);

  textNo.setName("N");
  textNo.setStringValue ("N");
  textNo.fontSize = labelFontSizeForDecision;
  textNo.setFontPostscriptName(labelFontNameForDecision);
  textNo.textColor = MSColor.colorWithSVGString(labelFontColorBright);


  var xYes = shapeFrame.midX() + 11,
      yYes = shapeFrame.midY();

  textYesFrame.setX(shapeFrame.midX() + 11);
  textYesFrame.setMidY(shapeFrame.midY());

  var xNo = shapeFrame.midX(),
      yNo = shapeFrame.maxY() - 16;

  textNoFrame.setMidX(shapeFrame.midX());
  textNoFrame.setY(shapeFrame.maxY() - 16);

  // Relocate the label
  labelFrame.setY(shapeFrame.minY());
  labelFrame.setX(shapeFrame.midX() - labelFrame.width() - 20);

}

/*  draw decision diamond shape for given label  */
function decisionShape(label)
{
  // get label size
  var labelFrame = [label frame];
  var labelWidth = [labelFrame width];
  var labelHeight = [labelFrame height];

  // set label style
  label.setFontPostscriptName(labelFontName);
  label.textColor = MSColor.colorWithSVGString(labelFontColor);  
  label.setFontSize (decisionLabelFontSize);

  // set shape padding
  var nSize = 25,
      minPadding = 40,
      maxPadding = 40,
      shapeHorizontalPadding = 40,
      shapeVerticalPadding = 40;

  // create shape path
  var shapePath = [NSBezierPath bezierPath];
  [shapePath moveToPoint:CGPointMake([labelFrame midX], [labelFrame midY] - nSize)];
  [shapePath lineToPoint:CGPointMake([labelFrame midX] + nSize, [labelFrame midY])];
  [shapePath lineToPoint:CGPointMake([labelFrame midX], [labelFrame midY] + nSize)];
  [shapePath lineToPoint:CGPointMake([labelFrame midX] - nSize, [labelFrame midY])];
  [shapePath closePath];

  // create shape
  var shape = [MSShapeGroup shapeWithBezierPath: shapePath];

  // set style
  var shapeStyle = [shape style];
  var fills = [shapeStyle fills];
  if([fills count] <= 0) [fills addNewStylePart];
  var shapeFill = [shapeStyle fill];

  // add gradient fill
  shapeFill.fillType = 0;
  shapeFill.color = MSColor.colorWithSVGString("#EC658D");

  return shape;
}